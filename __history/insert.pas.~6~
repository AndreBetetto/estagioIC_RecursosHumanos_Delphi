unit insert;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Phys.PGDef, FireDAC.Phys.PG, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TForm2 = class(TForm)
    Panel1: TPanel;
    btnInsert: TButton;
    btnViewProjects: TButton;
    btnClose: TButton;
    btnQuerySql: TButton;
    txtNumProj: TEdit;
    Label1: TLabel;
    txtFunc: TEdit;
    Label2: TLabel;
    txtPisoS: TEdit;
    Label3: TLabel;
    Label4: TLabel;
    listBForm: TListBox;
    txtDesc: TEdit;
    Label5: TLabel;
    Label6: TLabel;
    txtHabil: TEdit;
    txtHabilAll: TEdit;
    listBHabil: TListBox;
    btnAdd: TButton;
    Label7: TLabel;
    txtOrgao: TEdit;
    btnSave: TButton;
    comboBForm: TComboBox;
    FDConnection1: TFDConnection;
    FDQuery1: TFDQuery;
    FDPhysPgDriverLink1: TFDPhysPgDriverLink;
    procedure btnQuerySqlClick(Sender: TObject);
    procedure btnInsertClick(Sender: TObject);
    procedure btnViewProjectsClick(Sender: TObject);
    procedure btnCloseClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnAddClick(Sender: TObject);
    procedure btnSaveClick(Sender: TObject);
    procedure txtFuncKeyPress(Sender: TObject; var Key: Char);
    procedure txtNumProjKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.dfm}

uses Query, Tabelas, TelaInicial;

procedure TForm2.btnAddClick(Sender: TObject);
var
  hb : string;
begin
  hb := txtHabil.Text;
  listBHabil.Items.Add(hb);
  txtHabil.Text := '';
  txtHabilAll.Text := txtHabilAll.Text + ' - ' +  hb;
end;

procedure TForm2.btnCloseClick(Sender: TObject);
begin
  Self.Close;
  TelaInicial.Form1.Close;
end;

procedure TForm2.btnInsertClick(Sender: TObject);
begin
  Self.Close;
  insert.Form2.Show;
end;

procedure TForm2.btnQuerySqlClick(Sender: TObject);
begin
  Self.Close;
  Query.Form4.Show;
end;

procedure TForm2.btnSaveClick(Sender: TObject);
var
  numproj : integer;
  func : string;
  desc : string;
  form : string;
  habil : string;
  ps : double;
  org : string;
  psStr : string;
  time : TdateTime;
  npStr : string;

begin
  numproj := strToInt(txtNumProj.Text);
  npstr := txtNumProj.Text;
  func := txtFunc.Text;
  desc := txtDesc.Text;
  form := comboBForm.Text;
  habil := txtHabilAll.Text;
  ps := strToFloat(txtPisoS.Text);
  psStr := txtPisoS.Text;
  org := txtOrgao.Text;
  time := now;

  if(npstr <> '') and (func <> '') and (desc <> '') and (form <> '') and (habil <> '') and (psStr <> '') and (org <> '') then
  begin
    with FDQuery1 do
    begin
      SQL.clear;
      try
        SQL.Text := 'INSERT INTO projetoandre (projeto, funcao, descricao, formacao, ' +
                    'habilidades, piso_salarial, orgao, adicionado_em) ' +
                    'VALUES (:pnum, :fc, :ds, :fr, :hbl, :ps, :or, :add)';
        ParamByName('pnum').AsInteger := numproj;
        ParamByName('fc').AsString := func;
        ParamByName('ds').AsString := desc;
        ParamByName('fr').AsString := form;
        ParamByName('hbl').AsString := habil;
        ParamByName('ps').AsFloat := ps;
        ParamByName('or').AsString := org;
        ParamByName('add').AsDateTime := time;

        ExecSQL;
        except
          on E: Exception do
          begin
            showMessage('Ocorreu um erro ao inserir os dados: ' + E.Message);
          end;

      end;
      close;
    end;
  end;
end;

procedure TForm2.btnViewProjectsClick(Sender: TObject);
begin
  Self.Close;
  Tabelas.Form3.Show;
end;

procedure TForm2.FormCreate(Sender: TObject);
begin
  btnInsert.Enabled := false;
end;

procedure TForm2.txtFuncKeyPress(Sender: TObject; var Key: Char);
var
  str: string;
  p: Integer;
begin
  if not (CharInSet(Key, ['0'..'9', FormatSettings.DecimalSeparator, #8, #13])) then
    Key := #0;
  str := txtPisoS.Text;
  p := Pos(FormatSettings.DecimalSeparator, str);
  if (p > 0) and (Length(str) - p > 2) then
  begin
    str := Copy(str, 1, p+1);
    txtPisoS.Text := str;
    txtPisoS.SelStart := Length(str);
  end;
end;

procedure TForm2.txtNumProjKeyPress(Sender: TObject; var Key: Char);
begin
  if not (CharInSet(Key, ['0'..'9', #8, #13])) then
    Key := #0;
end;

end.
